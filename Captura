procedure TForm5.SpeedButton1Click(Sender: TObject);
var
  i       : Integer;
  vImagem : TMemoryStream;
begin
  vImagem := TMemoryStream.Create;

  for i := 1 to 1000 do
  begin
    Obter_AreaTrabalho(vImagem);

    vImagem.Position := 0;
    Image1.Picture.Bitmap.LoadFromStream(vImagem);

    vImagem.Clear;

    Application.ProcessMessages;
  end;

  vImagem.Free;
end;

procedure TForm5.Obter_AreaTrabalho(aRetorno: TMemoryStream);
var
  DC          : HDC;
  vImagem     : TBitmap;
  vCursor     : TIcon;
  vIcon       : TIconInfo;
  vCursorInfo : TCursorInfo;
begin
  DC      := GetDC(GetDesktopWindow);
  vImagem := TBitmap.Create;
  vImagem.PixelFormat := pf16bit;

  try
    vImagem.Width  := GetDeviceCaps(DC, HORZRES);
    vImagem.Height := GetDeviceCaps(DC, VERTRES);
    BitBlt(vImagem.Canvas.Handle, 0, 0, vImagem.Width, vImagem.Height, DC, 0, 0, SRCCOPY);


    vCursor := TIcon.Create;
    try
      vCursorInfo := Obter_Cursor;
      if (vCursorInfo.hCursor <> 0) then
      begin
        vCursor.Handle := vCursorInfo.hCursor;
        GetIconInfo(vCursorInfo.hCursor, vIcon);
        vImagem.Canvas.Draw(vCursorInfo.ptScreenPos.X - vIcon.xHotspot
                            ,vCursorInfo.ptScreenPos.Y - vIcon.yHotspot
                            ,vCursor);
      end;
    finally
      vCursor.ReleaseHandle;
      vCursor.Free;
    end;

  finally
    ReleaseDC(GetDesktopWindow, DC);
  end;

  vImagem.SaveToStream(aRetorno);
  vImagem.Free;
end;

function TForm5.Obter_Cursor: TCursorInfo;
var
  hWindow : HWND;
  pt: TPoint;
  pIconInfo: TIconInfo;

  dwThreadID,
  dwCurrentThreadID: DWORD;
begin
  Result.hCursor := 0;
  ZeroMemory(@Result, SizeOf(Result));
  // Encontra a janela "mae" do mouse
  if (GetCursorPos(pt) = True) then
  begin
    Result.ptScreenPos := pt;
    hWindow := WindowFromPoint(pt);

    if (IsWindow(hWindow) = True) then
    begin
      {Pega a thread do owner do mouse}
      dwThreadID := GetWindowThreadProcessId(hWindow, nil);

      {Pega o id da thread atual}
      dwCurrentThreadID := GetCurrentThreadId;

      if (dwCurrentThreadID <> dwThreadID) then
      begin
        if (AttachThreadInput(dwCurrentThreadID, dwThreadID, True) = True) then
        begin
          {Obtem o handle do cursor}
          Result.hCursor := GetCursor;
          AttachThreadInput(dwCurrentThreadID, dwThreadID, False);
        end;
      end
      else
      begin
        Result.hCursor := GetCursor;
      end;
    end;
  end;
end;
